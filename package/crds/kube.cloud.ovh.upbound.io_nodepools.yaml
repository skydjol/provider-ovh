---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: nodepools.kube.cloud.ovh.upbound.io
spec:
  group: kube.cloud.ovh.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - ovh
    kind: NodePool
    listKind: NodePoolList
    plural: nodepools
    singular: nodepool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodePool is the Schema for the NodePools API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodePoolSpec defines the desired state of NodePool
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  antiAffinity:
                    description: should the pool use the anti-affinity feature. Default
                      to false. Changing this value recreates the resource. Enable
                      anti affinity groups for nodes in the pool
                    type: boolean
                  autoscale:
                    description: Enable auto-scaling for the pool. Default to false.
                      Enable auto-scaling for the pool
                    type: boolean
                  desiredNodes:
                    description: number of nodes to start. Number of nodes you desire
                      in the pool
                    type: number
                  flavorName:
                    description: 'a valid OVHcloud public cloud flavor ID in which
                      the nodes will be started. Ex: "b2-7". You can find the list
                      of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/.
                      Changing this value recreates the resource. Flavor name'
                    type: string
                  kubeId:
                    description: The id of the managed kubernetes cluster. Changing
                      this value recreates the resource. Kube ID
                    type: string
                  kubeIdRef:
                    description: Reference to a Kube in kube to populate kubeId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kubeIdSelector:
                    description: Selector for a Kube in kube to populate kubeId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maxNodes:
                    description: maximum number of nodes allowed in the pool. Setting
                      desired_nodes over this value will raise an error. Number of
                      nodes you desire in the pool
                    type: number
                  minNodes:
                    description: minimum number of nodes allowed in the pool. Setting
                      desired_nodes under this value will raise an error. Number of
                      nodes you desire in the pool
                    type: number
                  monthlyBilled:
                    description: should the nodes be billed on a monthly basis. Default
                      to false. Changing this value recreates the resource. Enable
                      monthly billing on all nodes in the pool
                    type: boolean
                  name:
                    description: 'The name of the nodepool. Warning: _ char is not
                      allowed! Changing this value recreates the resource. NodePool
                      resource name'
                    type: string
                  serviceName:
                    description: The id of the public cloud project. If omitted, the
                      OVH_CLOUD_PROJECT_SERVICE environment variable is used. Changing
                      this value recreates the resource. Service name
                    type: string
                  template:
                    description: Node pool template
                    items:
                      properties:
                        metadata:
                          description: Metadata of each node in the pool metadata
                          items:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations to apply to each node annotations
                                type: object
                              finalizers:
                                description: Finalizers to apply to each node finalizers
                                items:
                                  type: string
                                type: array
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels to apply to each node labels
                                type: object
                            type: object
                          type: array
                        spec:
                          description: Spec of each node in the pool spec
                          items:
                            properties:
                              taints:
                                description: Taints to apply to each node taints
                                items:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type: array
                              unschedulable:
                                description: If true, set nodes as un-schedulable
                                  unschedulable
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: flavorName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.flavorName)
            - message: serviceName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.serviceName)
          status:
            description: NodePoolStatus defines the observed state of NodePool.
            properties:
              atProvider:
                properties:
                  antiAffinity:
                    description: should the pool use the anti-affinity feature. Default
                      to false. Changing this value recreates the resource. Enable
                      anti affinity groups for nodes in the pool
                    type: boolean
                  autoscale:
                    description: Enable auto-scaling for the pool. Default to false.
                      Enable auto-scaling for the pool
                    type: boolean
                  availableNodes:
                    description: Number of nodes which are actually ready in the pool
                      Number of nodes which are actually ready in the pool
                    type: number
                  createdAt:
                    description: Creation date Creation date
                    type: string
                  currentNodes:
                    description: Number of nodes present in the pool Number of nodes
                      present in the pool
                    type: number
                  desiredNodes:
                    description: number of nodes to start. Number of nodes you desire
                      in the pool
                    type: number
                  flavor:
                    description: Flavor name Flavor name
                    type: string
                  flavorName:
                    description: 'a valid OVHcloud public cloud flavor ID in which
                      the nodes will be started. Ex: "b2-7". You can find the list
                      of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/.
                      Changing this value recreates the resource. Flavor name'
                    type: string
                  id:
                    type: string
                  kubeId:
                    description: The id of the managed kubernetes cluster. Changing
                      this value recreates the resource. Kube ID
                    type: string
                  maxNodes:
                    description: maximum number of nodes allowed in the pool. Setting
                      desired_nodes over this value will raise an error. Number of
                      nodes you desire in the pool
                    type: number
                  minNodes:
                    description: minimum number of nodes allowed in the pool. Setting
                      desired_nodes under this value will raise an error. Number of
                      nodes you desire in the pool
                    type: number
                  monthlyBilled:
                    description: should the nodes be billed on a monthly basis. Default
                      to false. Changing this value recreates the resource. Enable
                      monthly billing on all nodes in the pool
                    type: boolean
                  name:
                    description: 'The name of the nodepool. Warning: _ char is not
                      allowed! Changing this value recreates the resource. NodePool
                      resource name'
                    type: string
                  projectId:
                    description: Project id Project id
                    type: string
                  serviceName:
                    description: The id of the public cloud project. If omitted, the
                      OVH_CLOUD_PROJECT_SERVICE environment variable is used. Changing
                      this value recreates the resource. Service name
                    type: string
                  sizeStatus:
                    description: Status describing the state between number of nodes
                      wanted and available ones Status describing the state between
                      number of nodes wanted and available ones
                    type: string
                  status:
                    description: Current status Current status
                    type: string
                  template:
                    description: Node pool template
                    items:
                      properties:
                        metadata:
                          description: Metadata of each node in the pool metadata
                          items:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations to apply to each node annotations
                                type: object
                              finalizers:
                                description: Finalizers to apply to each node finalizers
                                items:
                                  type: string
                                type: array
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels to apply to each node labels
                                type: object
                            type: object
                          type: array
                        spec:
                          description: Spec of each node in the pool spec
                          items:
                            properties:
                              taints:
                                description: Taints to apply to each node taints
                                items:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type: array
                              unschedulable:
                                description: If true, set nodes as un-schedulable
                                  unschedulable
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  upToDateNodes:
                    description: Number of nodes with the latest version installed
                      in the pool Number of nodes with latest version installed in
                      the pool
                    type: number
                  updatedAt:
                    description: Last update date Last update date
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
